{"ast":null,"code":"export default {\n  name: 'chainstart',\n  comment: 'Start of the Ethereum main chain',\n  url: '',\n  status: '',\n  gasConfig: {\n    minGasLimit: {\n      v: 5000,\n      d: 'Minimum the gas limit may ever be'\n    },\n    gasLimitBoundDivisor: {\n      v: 1024,\n      d: 'The bound divisor of the gas limit, used in update calculations'\n    },\n    maxRefundQuotient: {\n      v: 2,\n      d: 'Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)'\n    }\n  },\n  gasPrices: {\n    base: {\n      v: 2,\n      d: 'Gas base cost, used e.g. for ChainID opcode (Istanbul)'\n    },\n    tierStep: {\n      v: [0, 2, 3, 5, 8, 10, 20],\n      d: 'Once per operation, for a selection of them'\n    },\n    exp: {\n      v: 10,\n      d: 'Base fee of the EXP opcode'\n    },\n    expByte: {\n      v: 10,\n      d: 'Times ceil(log256(exponent)) for the EXP instruction'\n    },\n    sha3: {\n      v: 30,\n      d: 'Base fee of the SHA3 opcode'\n    },\n    sha3Word: {\n      v: 6,\n      d: \"Once per word of the SHA3 operation's data\"\n    },\n    sload: {\n      v: 50,\n      d: 'Base fee of the SLOAD opcode'\n    },\n    sstoreSet: {\n      v: 20000,\n      d: 'Once per SSTORE operation if the zeroness changes from zero'\n    },\n    sstoreReset: {\n      v: 5000,\n      d: 'Once per SSTORE operation if the zeroness does not change from zero'\n    },\n    sstoreRefund: {\n      v: 15000,\n      d: 'Once per SSTORE operation if the zeroness changes to zero'\n    },\n    jumpdest: {\n      v: 1,\n      d: 'Base fee of the JUMPDEST opcode'\n    },\n    log: {\n      v: 375,\n      d: 'Base fee of the LOG opcode'\n    },\n    logData: {\n      v: 8,\n      d: \"Per byte in a LOG* operation's data\"\n    },\n    logTopic: {\n      v: 375,\n      d: 'Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas'\n    },\n    create: {\n      v: 32000,\n      d: 'Base fee of the CREATE opcode'\n    },\n    call: {\n      v: 40,\n      d: 'Base fee of the CALL opcode'\n    },\n    callStipend: {\n      v: 2300,\n      d: 'Free gas given at beginning of call'\n    },\n    callValueTransfer: {\n      v: 9000,\n      d: 'Paid for CALL when the value transfor is non-zero'\n    },\n    callNewAccount: {\n      v: 25000,\n      d: \"Paid for CALL when the destination address didn't exist prior\"\n    },\n    selfdestructRefund: {\n      v: 24000,\n      d: 'Refunded following a selfdestruct operation'\n    },\n    memory: {\n      v: 3,\n      d: 'Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL'\n    },\n    quadCoeffDiv: {\n      v: 512,\n      d: 'Divisor for the quadratic particle of the memory cost equation'\n    },\n    createData: {\n      v: 200,\n      d: ''\n    },\n    tx: {\n      v: 21000,\n      d: 'Per transaction. NOTE: Not payable on data of calls between transactions'\n    },\n    txCreation: {\n      v: 32000,\n      d: 'The cost of creating a contract via tx'\n    },\n    txDataZero: {\n      v: 4,\n      d: 'Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions'\n    },\n    txDataNonZero: {\n      v: 68,\n      d: 'Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions'\n    },\n    copy: {\n      v: 3,\n      d: 'Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added'\n    },\n    ecRecover: {\n      v: 3000,\n      d: ''\n    },\n    sha256: {\n      v: 60,\n      d: ''\n    },\n    sha256Word: {\n      v: 12,\n      d: ''\n    },\n    ripemd160: {\n      v: 600,\n      d: ''\n    },\n    ripemd160Word: {\n      v: 120,\n      d: ''\n    },\n    identity: {\n      v: 15,\n      d: ''\n    },\n    identityWord: {\n      v: 3,\n      d: ''\n    },\n    stop: {\n      v: 0,\n      d: 'Base fee of the STOP opcode'\n    },\n    add: {\n      v: 3,\n      d: 'Base fee of the ADD opcode'\n    },\n    mul: {\n      v: 5,\n      d: 'Base fee of the MUL opcode'\n    },\n    sub: {\n      v: 3,\n      d: 'Base fee of the SUB opcode'\n    },\n    div: {\n      v: 5,\n      d: 'Base fee of the DIV opcode'\n    },\n    sdiv: {\n      v: 5,\n      d: 'Base fee of the SDIV opcode'\n    },\n    mod: {\n      v: 5,\n      d: 'Base fee of the MOD opcode'\n    },\n    smod: {\n      v: 5,\n      d: 'Base fee of the SMOD opcode'\n    },\n    addmod: {\n      v: 8,\n      d: 'Base fee of the ADDMOD opcode'\n    },\n    mulmod: {\n      v: 8,\n      d: 'Base fee of the MULMOD opcode'\n    },\n    signextend: {\n      v: 5,\n      d: 'Base fee of the SIGNEXTEND opcode'\n    },\n    lt: {\n      v: 3,\n      d: 'Base fee of the LT opcode'\n    },\n    gt: {\n      v: 3,\n      d: 'Base fee of the GT opcode'\n    },\n    slt: {\n      v: 3,\n      d: 'Base fee of the SLT opcode'\n    },\n    sgt: {\n      v: 3,\n      d: 'Base fee of the SGT opcode'\n    },\n    eq: {\n      v: 3,\n      d: 'Base fee of the EQ opcode'\n    },\n    iszero: {\n      v: 3,\n      d: 'Base fee of the ISZERO opcode'\n    },\n    and: {\n      v: 3,\n      d: 'Base fee of the AND opcode'\n    },\n    or: {\n      v: 3,\n      d: 'Base fee of the OR opcode'\n    },\n    xor: {\n      v: 3,\n      d: 'Base fee of the XOR opcode'\n    },\n    not: {\n      v: 3,\n      d: 'Base fee of the NOT opcode'\n    },\n    byte: {\n      v: 3,\n      d: 'Base fee of the BYTE opcode'\n    },\n    address: {\n      v: 2,\n      d: 'Base fee of the ADDRESS opcode'\n    },\n    balance: {\n      v: 20,\n      d: 'Base fee of the BALANCE opcode'\n    },\n    origin: {\n      v: 2,\n      d: 'Base fee of the ORIGIN opcode'\n    },\n    caller: {\n      v: 2,\n      d: 'Base fee of the CALLER opcode'\n    },\n    callvalue: {\n      v: 2,\n      d: 'Base fee of the CALLVALUE opcode'\n    },\n    calldataload: {\n      v: 3,\n      d: 'Base fee of the CALLDATALOAD opcode'\n    },\n    calldatasize: {\n      v: 2,\n      d: 'Base fee of the CALLDATASIZE opcode'\n    },\n    calldatacopy: {\n      v: 3,\n      d: 'Base fee of the CALLDATACOPY opcode'\n    },\n    codesize: {\n      v: 2,\n      d: 'Base fee of the CODESIZE opcode'\n    },\n    codecopy: {\n      v: 3,\n      d: 'Base fee of the CODECOPY opcode'\n    },\n    gasprice: {\n      v: 2,\n      d: 'Base fee of the GASPRICE opcode'\n    },\n    extcodesize: {\n      v: 20,\n      d: 'Base fee of the EXTCODESIZE opcode'\n    },\n    extcodecopy: {\n      v: 20,\n      d: 'Base fee of the EXTCODECOPY opcode'\n    },\n    blockhash: {\n      v: 20,\n      d: 'Base fee of the BLOCKHASH opcode'\n    },\n    coinbase: {\n      v: 2,\n      d: 'Base fee of the COINBASE opcode'\n    },\n    timestamp: {\n      v: 2,\n      d: 'Base fee of the TIMESTAMP opcode'\n    },\n    number: {\n      v: 2,\n      d: 'Base fee of the NUMBER opcode'\n    },\n    difficulty: {\n      v: 2,\n      d: 'Base fee of the DIFFICULTY opcode'\n    },\n    gaslimit: {\n      v: 2,\n      d: 'Base fee of the GASLIMIT opcode'\n    },\n    pop: {\n      v: 2,\n      d: 'Base fee of the POP opcode'\n    },\n    mload: {\n      v: 3,\n      d: 'Base fee of the MLOAD opcode'\n    },\n    mstore: {\n      v: 3,\n      d: 'Base fee of the MSTORE opcode'\n    },\n    mstore8: {\n      v: 3,\n      d: 'Base fee of the MSTORE8 opcode'\n    },\n    sstore: {\n      v: 0,\n      d: 'Base fee of the SSTORE opcode'\n    },\n    jump: {\n      v: 8,\n      d: 'Base fee of the JUMP opcode'\n    },\n    jumpi: {\n      v: 10,\n      d: 'Base fee of the JUMPI opcode'\n    },\n    pc: {\n      v: 2,\n      d: 'Base fee of the PC opcode'\n    },\n    msize: {\n      v: 2,\n      d: 'Base fee of the MSIZE opcode'\n    },\n    gas: {\n      v: 2,\n      d: 'Base fee of the GAS opcode'\n    },\n    push: {\n      v: 3,\n      d: 'Base fee of the PUSH opcode'\n    },\n    dup: {\n      v: 3,\n      d: 'Base fee of the DUP opcode'\n    },\n    swap: {\n      v: 3,\n      d: 'Base fee of the SWAP opcode'\n    },\n    callcode: {\n      v: 40,\n      d: 'Base fee of the CALLCODE opcode'\n    },\n    return: {\n      v: 0,\n      d: 'Base fee of the RETURN opcode'\n    },\n    invalid: {\n      v: 0,\n      d: 'Base fee of the INVALID opcode'\n    },\n    selfdestruct: {\n      v: 0,\n      d: 'Base fee of the SELFDESTRUCT opcode'\n    }\n  },\n  vm: {\n    stackLimit: {\n      v: 1024,\n      d: 'Maximum size of VM stack allowed'\n    },\n    callCreateDepth: {\n      v: 1024,\n      d: 'Maximum depth of call/create stack'\n    },\n    maxExtraDataSize: {\n      v: 32,\n      d: 'Maximum size extra data may be after Genesis'\n    }\n  },\n  pow: {\n    minimumDifficulty: {\n      v: 131072,\n      d: 'The minimum that the difficulty may ever be'\n    },\n    difficultyBoundDivisor: {\n      v: 2048,\n      d: 'The bound divisor of the difficulty, used in the update calculations'\n    },\n    durationLimit: {\n      v: 13,\n      d: 'The decision boundary on the blocktime duration used to determine whether difficulty should go up or not'\n    },\n    epochDuration: {\n      v: 30000,\n      d: 'Duration between proof-of-work epochs'\n    },\n    timebombPeriod: {\n      v: 100000,\n      d: 'Exponential difficulty timebomb period'\n    },\n    minerReward: {\n      v: '5000000000000000000',\n      d: 'the amount a miner get rewarded for mining a block'\n    },\n    difficultyBombDelay: {\n      v: 0,\n      d: 'the amount of blocks to delay the difficulty bomb with'\n    }\n  }\n};","map":{"version":3,"names":["name","comment","url","status","gasConfig","minGasLimit","v","d","gasLimitBoundDivisor","maxRefundQuotient","gasPrices","base","tierStep","exp","expByte","sha3","sha3Word","sload","sstoreSet","sstoreReset","sstoreRefund","jumpdest","log","logData","logTopic","create","call","callStipend","callValueTransfer","callNewAccount","selfdestructRefund","memory","quadCoeffDiv","createData","tx","txCreation","txDataZero","txDataNonZero","copy","ecRecover","sha256","sha256Word","ripemd160","ripemd160Word","identity","identityWord","stop","add","mul","sub","div","sdiv","mod","smod","addmod","mulmod","signextend","lt","gt","slt","sgt","eq","iszero","and","or","xor","not","byte","address","balance","origin","caller","callvalue","calldataload","calldatasize","calldatacopy","codesize","codecopy","gasprice","extcodesize","extcodecopy","blockhash","coinbase","timestamp","number","difficulty","gaslimit","pop","mload","mstore","mstore8","sstore","jump","jumpi","pc","msize","gas","push","dup","swap","callcode","return","invalid","selfdestruct","vm","stackLimit","callCreateDepth","maxExtraDataSize","pow","minimumDifficulty","difficultyBoundDivisor","durationLimit","epochDuration","timebombPeriod","minerReward","difficultyBombDelay"],"sources":["C:\\Users\\YUVRAJ\\OneDrive\\Desktop\\archdo_ai_eth\\frontend\\node_modules\\web3-eth-accounts\\src\\common\\hardforks\\chainstart.ts"],"sourcesContent":["export default {\n\tname: 'chainstart',\n\tcomment: 'Start of the Ethereum main chain',\n\turl: '',\n\tstatus: '',\n\tgasConfig: {\n\t\tminGasLimit: {\n\t\t\tv: 5000,\n\t\t\td: 'Minimum the gas limit may ever be',\n\t\t},\n\t\tgasLimitBoundDivisor: {\n\t\t\tv: 1024,\n\t\t\td: 'The bound divisor of the gas limit, used in update calculations',\n\t\t},\n\t\tmaxRefundQuotient: {\n\t\t\tv: 2,\n\t\t\td: 'Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)',\n\t\t},\n\t},\n\tgasPrices: {\n\t\tbase: {\n\t\t\tv: 2,\n\t\t\td: 'Gas base cost, used e.g. for ChainID opcode (Istanbul)',\n\t\t},\n\t\ttierStep: {\n\t\t\tv: [0, 2, 3, 5, 8, 10, 20],\n\t\t\td: 'Once per operation, for a selection of them',\n\t\t},\n\t\texp: {\n\t\t\tv: 10,\n\t\t\td: 'Base fee of the EXP opcode',\n\t\t},\n\t\texpByte: {\n\t\t\tv: 10,\n\t\t\td: 'Times ceil(log256(exponent)) for the EXP instruction',\n\t\t},\n\t\tsha3: {\n\t\t\tv: 30,\n\t\t\td: 'Base fee of the SHA3 opcode',\n\t\t},\n\t\tsha3Word: {\n\t\t\tv: 6,\n\t\t\td: \"Once per word of the SHA3 operation's data\",\n\t\t},\n\t\tsload: {\n\t\t\tv: 50,\n\t\t\td: 'Base fee of the SLOAD opcode',\n\t\t},\n\t\tsstoreSet: {\n\t\t\tv: 20000,\n\t\t\td: 'Once per SSTORE operation if the zeroness changes from zero',\n\t\t},\n\t\tsstoreReset: {\n\t\t\tv: 5000,\n\t\t\td: 'Once per SSTORE operation if the zeroness does not change from zero',\n\t\t},\n\t\tsstoreRefund: {\n\t\t\tv: 15000,\n\t\t\td: 'Once per SSTORE operation if the zeroness changes to zero',\n\t\t},\n\t\tjumpdest: {\n\t\t\tv: 1,\n\t\t\td: 'Base fee of the JUMPDEST opcode',\n\t\t},\n\t\tlog: {\n\t\t\tv: 375,\n\t\t\td: 'Base fee of the LOG opcode',\n\t\t},\n\t\tlogData: {\n\t\t\tv: 8,\n\t\t\td: \"Per byte in a LOG* operation's data\",\n\t\t},\n\t\tlogTopic: {\n\t\t\tv: 375,\n\t\t\td: 'Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas',\n\t\t},\n\t\tcreate: {\n\t\t\tv: 32000,\n\t\t\td: 'Base fee of the CREATE opcode',\n\t\t},\n\t\tcall: {\n\t\t\tv: 40,\n\t\t\td: 'Base fee of the CALL opcode',\n\t\t},\n\t\tcallStipend: {\n\t\t\tv: 2300,\n\t\t\td: 'Free gas given at beginning of call',\n\t\t},\n\t\tcallValueTransfer: {\n\t\t\tv: 9000,\n\t\t\td: 'Paid for CALL when the value transfor is non-zero',\n\t\t},\n\t\tcallNewAccount: {\n\t\t\tv: 25000,\n\t\t\td: \"Paid for CALL when the destination address didn't exist prior\",\n\t\t},\n\t\tselfdestructRefund: {\n\t\t\tv: 24000,\n\t\t\td: 'Refunded following a selfdestruct operation',\n\t\t},\n\t\tmemory: {\n\t\t\tv: 3,\n\t\t\td: 'Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL',\n\t\t},\n\t\tquadCoeffDiv: {\n\t\t\tv: 512,\n\t\t\td: 'Divisor for the quadratic particle of the memory cost equation',\n\t\t},\n\t\tcreateData: {\n\t\t\tv: 200,\n\t\t\td: '',\n\t\t},\n\t\ttx: {\n\t\t\tv: 21000,\n\t\t\td: 'Per transaction. NOTE: Not payable on data of calls between transactions',\n\t\t},\n\t\ttxCreation: {\n\t\t\tv: 32000,\n\t\t\td: 'The cost of creating a contract via tx',\n\t\t},\n\t\ttxDataZero: {\n\t\t\tv: 4,\n\t\t\td: 'Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions',\n\t\t},\n\t\ttxDataNonZero: {\n\t\t\tv: 68,\n\t\t\td: 'Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions',\n\t\t},\n\t\tcopy: {\n\t\t\tv: 3,\n\t\t\td: 'Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added',\n\t\t},\n\t\tecRecover: {\n\t\t\tv: 3000,\n\t\t\td: '',\n\t\t},\n\t\tsha256: {\n\t\t\tv: 60,\n\t\t\td: '',\n\t\t},\n\t\tsha256Word: {\n\t\t\tv: 12,\n\t\t\td: '',\n\t\t},\n\t\tripemd160: {\n\t\t\tv: 600,\n\t\t\td: '',\n\t\t},\n\t\tripemd160Word: {\n\t\t\tv: 120,\n\t\t\td: '',\n\t\t},\n\t\tidentity: {\n\t\t\tv: 15,\n\t\t\td: '',\n\t\t},\n\t\tidentityWord: {\n\t\t\tv: 3,\n\t\t\td: '',\n\t\t},\n\t\tstop: {\n\t\t\tv: 0,\n\t\t\td: 'Base fee of the STOP opcode',\n\t\t},\n\t\tadd: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the ADD opcode',\n\t\t},\n\t\tmul: {\n\t\t\tv: 5,\n\t\t\td: 'Base fee of the MUL opcode',\n\t\t},\n\t\tsub: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the SUB opcode',\n\t\t},\n\t\tdiv: {\n\t\t\tv: 5,\n\t\t\td: 'Base fee of the DIV opcode',\n\t\t},\n\t\tsdiv: {\n\t\t\tv: 5,\n\t\t\td: 'Base fee of the SDIV opcode',\n\t\t},\n\t\tmod: {\n\t\t\tv: 5,\n\t\t\td: 'Base fee of the MOD opcode',\n\t\t},\n\t\tsmod: {\n\t\t\tv: 5,\n\t\t\td: 'Base fee of the SMOD opcode',\n\t\t},\n\t\taddmod: {\n\t\t\tv: 8,\n\t\t\td: 'Base fee of the ADDMOD opcode',\n\t\t},\n\t\tmulmod: {\n\t\t\tv: 8,\n\t\t\td: 'Base fee of the MULMOD opcode',\n\t\t},\n\t\tsignextend: {\n\t\t\tv: 5,\n\t\t\td: 'Base fee of the SIGNEXTEND opcode',\n\t\t},\n\t\tlt: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the LT opcode',\n\t\t},\n\t\tgt: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the GT opcode',\n\t\t},\n\t\tslt: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the SLT opcode',\n\t\t},\n\t\tsgt: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the SGT opcode',\n\t\t},\n\t\teq: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the EQ opcode',\n\t\t},\n\t\tiszero: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the ISZERO opcode',\n\t\t},\n\t\tand: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the AND opcode',\n\t\t},\n\t\tor: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the OR opcode',\n\t\t},\n\t\txor: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the XOR opcode',\n\t\t},\n\t\tnot: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the NOT opcode',\n\t\t},\n\t\tbyte: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the BYTE opcode',\n\t\t},\n\t\taddress: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the ADDRESS opcode',\n\t\t},\n\t\tbalance: {\n\t\t\tv: 20,\n\t\t\td: 'Base fee of the BALANCE opcode',\n\t\t},\n\t\torigin: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the ORIGIN opcode',\n\t\t},\n\t\tcaller: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the CALLER opcode',\n\t\t},\n\t\tcallvalue: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the CALLVALUE opcode',\n\t\t},\n\t\tcalldataload: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the CALLDATALOAD opcode',\n\t\t},\n\t\tcalldatasize: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the CALLDATASIZE opcode',\n\t\t},\n\t\tcalldatacopy: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the CALLDATACOPY opcode',\n\t\t},\n\t\tcodesize: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the CODESIZE opcode',\n\t\t},\n\t\tcodecopy: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the CODECOPY opcode',\n\t\t},\n\t\tgasprice: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the GASPRICE opcode',\n\t\t},\n\t\textcodesize: {\n\t\t\tv: 20,\n\t\t\td: 'Base fee of the EXTCODESIZE opcode',\n\t\t},\n\t\textcodecopy: {\n\t\t\tv: 20,\n\t\t\td: 'Base fee of the EXTCODECOPY opcode',\n\t\t},\n\t\tblockhash: {\n\t\t\tv: 20,\n\t\t\td: 'Base fee of the BLOCKHASH opcode',\n\t\t},\n\t\tcoinbase: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the COINBASE opcode',\n\t\t},\n\t\ttimestamp: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the TIMESTAMP opcode',\n\t\t},\n\t\tnumber: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the NUMBER opcode',\n\t\t},\n\t\tdifficulty: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the DIFFICULTY opcode',\n\t\t},\n\t\tgaslimit: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the GASLIMIT opcode',\n\t\t},\n\t\tpop: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the POP opcode',\n\t\t},\n\t\tmload: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the MLOAD opcode',\n\t\t},\n\t\tmstore: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the MSTORE opcode',\n\t\t},\n\t\tmstore8: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the MSTORE8 opcode',\n\t\t},\n\t\tsstore: {\n\t\t\tv: 0,\n\t\t\td: 'Base fee of the SSTORE opcode',\n\t\t},\n\t\tjump: {\n\t\t\tv: 8,\n\t\t\td: 'Base fee of the JUMP opcode',\n\t\t},\n\t\tjumpi: {\n\t\t\tv: 10,\n\t\t\td: 'Base fee of the JUMPI opcode',\n\t\t},\n\t\tpc: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the PC opcode',\n\t\t},\n\t\tmsize: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the MSIZE opcode',\n\t\t},\n\t\tgas: {\n\t\t\tv: 2,\n\t\t\td: 'Base fee of the GAS opcode',\n\t\t},\n\t\tpush: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the PUSH opcode',\n\t\t},\n\t\tdup: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the DUP opcode',\n\t\t},\n\t\tswap: {\n\t\t\tv: 3,\n\t\t\td: 'Base fee of the SWAP opcode',\n\t\t},\n\t\tcallcode: {\n\t\t\tv: 40,\n\t\t\td: 'Base fee of the CALLCODE opcode',\n\t\t},\n\t\treturn: {\n\t\t\tv: 0,\n\t\t\td: 'Base fee of the RETURN opcode',\n\t\t},\n\t\tinvalid: {\n\t\t\tv: 0,\n\t\t\td: 'Base fee of the INVALID opcode',\n\t\t},\n\t\tselfdestruct: {\n\t\t\tv: 0,\n\t\t\td: 'Base fee of the SELFDESTRUCT opcode',\n\t\t},\n\t},\n\tvm: {\n\t\tstackLimit: {\n\t\t\tv: 1024,\n\t\t\td: 'Maximum size of VM stack allowed',\n\t\t},\n\t\tcallCreateDepth: {\n\t\t\tv: 1024,\n\t\t\td: 'Maximum depth of call/create stack',\n\t\t},\n\t\tmaxExtraDataSize: {\n\t\t\tv: 32,\n\t\t\td: 'Maximum size extra data may be after Genesis',\n\t\t},\n\t},\n\tpow: {\n\t\tminimumDifficulty: {\n\t\t\tv: 131072,\n\t\t\td: 'The minimum that the difficulty may ever be',\n\t\t},\n\t\tdifficultyBoundDivisor: {\n\t\t\tv: 2048,\n\t\t\td: 'The bound divisor of the difficulty, used in the update calculations',\n\t\t},\n\t\tdurationLimit: {\n\t\t\tv: 13,\n\t\t\td: 'The decision boundary on the blocktime duration used to determine whether difficulty should go up or not',\n\t\t},\n\t\tepochDuration: {\n\t\t\tv: 30000,\n\t\t\td: 'Duration between proof-of-work epochs',\n\t\t},\n\t\ttimebombPeriod: {\n\t\t\tv: 100000,\n\t\t\td: 'Exponential difficulty timebomb period',\n\t\t},\n\t\tminerReward: {\n\t\t\tv: '5000000000000000000',\n\t\t\td: 'the amount a miner get rewarded for mining a block',\n\t\t},\n\t\tdifficultyBombDelay: {\n\t\t\tv: 0,\n\t\t\td: 'the amount of blocks to delay the difficulty bomb with',\n\t\t},\n\t},\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}